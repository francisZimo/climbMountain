1、HTTPS和HTTP有什么区别?
	1）传输方式有无加密。http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议
	2）https更安全。http的连接很简单，是无状态的；https协议是有ssl+http协议构建的可进行加密传输，身份认证的网络协议，比http协议安全
	3）连接方式不同，端头不同，http是80，https是443
	4）https协议需要到ca机构申请ssl证书（如沃通CA），另外沃通CA还提供三年掐的免费ssl证书，高级别的ssl证书需要一定的费用。

    简述：https更加安全，需要ssl加密协议，连接方式和端口不同，http是80，https是443

2、怎么获取数据类型？
	Object.prototype.toString.call('字符串')

3、vue双向绑定原理：数据劫持
    1、监听 Observer  利用Obeject.defineProperty()来监听属性变动
    2、解析  compile主要做的事情是解析模板指令，将模板中的变量替换成数据
    3、实现一个Watcher，作为连接Observer和Compile的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数，从而更新视图
    4、mvvm入口函数，整合以上三者

4、三次握手
    a. 域名解析
    b. 发起TCP的3次握手
    c. 建立TCP连接后发起http请求
    d. 服务器端响应http请求，浏览器得到html代码
    e. 浏览器解析html代码，并请求html代码中的资源
    f. 浏览器对页面进行渲染呈现给用户

5、什么是vuex
    个人理解：就是解决组件间共享状态的问题

    vuex解决了组件之间共享同一状态的麻烦问题。当我们的应用遇到多个组件共享状态时，会需要：

    多个组件依赖于同一状态。传参的方法对于多层嵌套的组件将会非常繁琐，并且对于兄弟组件间的状态传递无能为力。这需要你去学习下，vue编码中多个组件之间的通讯的做法。
    来自不同组件的行为需要变更同一状态。我们经常会采用父子组件直接引用或者通过事件来变更和同步状态的多份拷贝。
    以上的这些模式非常脆弱，通常会导致无法维护的代码。来自官网的一句话：Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态。这里的关键在于集中式存储管理。这意味着本来需要共享状态的更新是需要组件之间通讯的，而现在有了vuex，就组件就都和store通讯了。问题就自然解决了。

    这就是为什么官网再次会提到Vuex构建大型应用的价值。如果您不打算开发大型单页应用，使用 Vuex 可能是繁琐冗余的。确实是如此――如果您的应用够简单，您最好不要使用 Vuex。

6、div居中
    方法1：绝对布局
        margin: auto;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    方法二：上左定位50%，translate自身一半宽高
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%,-50%);
    方法三：上左定位50%，margin-top/left自身一半宽高
        position: absolute;
        left: 50%;
        top: 50%;
        margin-left: -50px;
        margin-top: -50px;
    方法三：弹性布局居中
        要居中的父级元素上设置
        display: flex;
        justify-content: center; //定义项目在主轴(水平方向)上居中对齐
        align-items: center; //定义项目在交叉轴(垂直方向)上居中对齐

7、模块化开发
    https://blog.csdn.net/m_review/article/details/78643967
    “模块”是为完成某一功能所需的一段程序或子程序。模块是系统中“职责单一”且“可替换”的部分。

    所谓的模块化就是指把系统代码分为一系列职责单一且可替换的模块。模块化开发是指如何开发新的模块和复用已有的模块来实现应用的功能。

8、数组去重   
    常规js  for……in循环   es6中set
    var set1 = Array.from(new Set([1,1,2,2,33,'33',44,'44']))   

9、换行
    word-wrap : break-word

10、js运行机制
    单线程，自上而下依次进程，遇到计时器或者回调函数则异步进行，但不影响单线程继续往下走
    